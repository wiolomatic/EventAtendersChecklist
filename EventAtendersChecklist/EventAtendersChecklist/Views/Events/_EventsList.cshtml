@model IEnumerable<EventAtendersChecklist.Models.Event>
@using GridMvc.Html;

<h2>Index</h2>

<div class="container">
    <div class="form-group">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
            <input type="text" id="Search" placeholder="Search" class="form-control" />
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        function Contains(text_one, text_two) {
            if (text_one.indexOf(text_two) != -1)
                return true;
        }
        $("#Search").keyup(function () {
            var searchText = $("#Search").val().toLowerCase();
            $(".Search").each(function () {
                if (!Contains($(this).text().toLowerCase(), searchtext)) {
                    $(this).hide();
                }
                else {
                    $(this).show();
                }
            });
        });
    });
</script>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
</p>

@Html.Grid(Model).Columns(collumn =>
{
    collumn.Add(x => x.Id, true);
    collumn.Add(x => x.Name).Titled("Event").Sortable(true).Css("Search");
    collumn.Add(x => x.StartDate).Titled("Start Date").Sortable(true)
                .SortInitialDirection(GridMvc.Sorting.GridSortDirection.Descending); ;
    collumn.Add(x => x.EndDate).Titled("End Date").Sortable(true).Filterable(true);
    collumn.Add().Sanitized(false).Encoded(false)
                .RenderValueAs(model => Html.ActionLink("Show", "Show", new { id = model.Id }, new { @class = "btn btn-info" }).ToHtmlString());
    collumn.Add().Sanitized(false).Encoded(false)
                .RenderValueAs(model => Html.ActionLink("Edit", "Edit", new { id = model.Id }, new { @class = "btn btn-warning" }).ToHtmlString());
    collumn.Add().Sanitized(false).Encoded(false)
                .RenderValueAs(model => Html.ActionLink("Details", "Details", new { id = model.Id }, new { @class = "btn btn-primary" }).ToHtmlString());
    collumn.Add().Sanitized(false).Encoded(false)
                .RenderValueAs(model => Html.ActionLink("Delete", "Delete", new { id = model.Id }, new { @class = "btn btn-danger" }).ToHtmlString());
}).WithPaging(10)
