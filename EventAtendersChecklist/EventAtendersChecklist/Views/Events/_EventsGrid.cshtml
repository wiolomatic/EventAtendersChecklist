@model EventAtendersChecklist.ModelsView.ListOfAttendeesWithActions
@using GridMvc.Html;

@{
    ViewBag.id = Model.EventId;
}

<div>
    <hr />
    @if (User.Identity.IsAuthenticated)
    {
        if (User.IsInRole("HR"))
        {
            <p>
                @Html.ActionLink("Add New Attendee", "AddToEvent", "Employees", new { id = Model.EventId }, new { @class = "btn btn-success" })
                @Html.ActionLink("Add New Action", "AddActionToEvent", "ActionDictionaries", new { id = Model.EventId }, new { @class = "btn btn-success" })
                @if (!Request.Browser.IsMobileDevice)
                {
                @Html.ActionLink("Import from excel", "ImportExcelFile", "Events", new { id = Model.EventId }, new { @class = "btn btn-success" })
                    if (Model != null)
                    {

                       @Html.ActionLink("Export to excel", "ExportToExcel", "Events", new { id = Model.EventId }, new { @class = "btn btn-primary pull-right" })
                    }
                }
            </p>
        }
    }
</div>

<h4 style="padding: 20px 0 20px 0">Show Event list</h4>

@Html.Grid(Model.EventAttenderList).Columns(columns =>
{
    if (User.IsInRole("HR"))
    {
    columns.Add()
    .Encoded(false)
    .Sanitized(false)
    .RenderValueAs(o => @<button class="btn-danger glyphicon glyphicon-trash"
                                     onclick="DeleteEmployee(@Model.EventId, @o.AttenderId)"></button>);
    }
    columns.Add(x => x.FirstName).Titled("First Name").Sortable(true);
    columns.Add(x => x.LastName).Titled("Last Name").Sortable(true);
    columns.Add(x => x.Email).Titled("Email").Sortable(true);
    foreach (var item in Model.ActionDictionaryList)
    {
        columns.Add()
        .Titled(item.Name)
        .Encoded(false)
        .Sanitized(false)
        .RenderValueAs(o => Html.CheckBox(string.Format("checkbox|{0}|{1}|{2}", Model.EventId, o.AttenderId, item.Id), o.Actions
                        .Where(x => x.ActionId == item.Id)
                        .Select(x => x.Value).First(), new { @onclick = "AsertClick(this.id)" }))
            .Sortable(true);
    }
}).SetRowCssClasses(item => item.IsSearched ? "Search" : "Search")

<p>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</p>

<script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
<script src="~/signalr/hubs"></script>
<script type="text/javascript">
   
    function AsertClick(clicked_id) {
        var val = document.getElementById(clicked_id).checked;
        var res = clicked_id.split("_");
        var EventId = String(res[1]);
        var AttendeeId = String(res[2]);
        var ActionId = String(res[3]);
        $.ajax({
            type: "POST",
            url: "/Events/ChangeCheckBoxValue",
            data: {
                EmployeeId: AttendeeId,
                EventId: EventId,
                ActionID: ActionId,
                value: val
            },
            cache: false,
            success: function (result) {
                getEvents();
                    
                
            }
        })
    }

    var DeleteEmployee = function (EventId, employeeId) {
        $.ajax({
            type: "POST",
            url: "/Events/DeleteEmployee",
            data: {
                EmployeeId: employeeId,
                EventId: EventId
            },
            cache: false,
            success: function (result) {
            }
        })
    }

        $(document).ready(function () {
            $("#filter").keyup(function (e) {
                
                // Retrieve the input field text and reset the count to zero
                var filter = $(this).val(), count = 0;

                // Loop through the comment list
                $(".Search").each(function () {

                    // If the list item does not contain the text phrase fade it out
                    if ($(this).text().search(new RegExp(filter, "i")) < 0) {
                        $(this).fadeOut();

                        // Show the list item if the phrase matches and increase the count by 1
                    } else {
                        $(this).show();
                        count++;
                    }
                });

                // Update the count
                var numberItems = count;
                $("#filter-count").text("Number of Attendees = " + count);
            });
        });
</script>
